
#[gcode_macro M300]
#gcode:
    # Use a default 1kHz tone if S is omitted.
    #{% set S = params.S|default(1000)|int %}
    # Use a 10ms duration is P is omitted.
    #{% set P = params.P|default(100)|int %}
#    SET_PIN PIN=beeper VALUE=0.5 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
    #G4 P{P}
    #SET_PIN PIN=beeper VALUE=0

[gcode_macro START_PRINT]
gcode:
    G90
    G28
    #Z_TILT_ADJUST
    BED_MESH_PROFILE LOAD=default
    #BED_MESH_CALIBRATE AREA_START={params.AREA_START|default("0,0")} AREA_END={params.AREA_END|default("0,0")}
    # Move the nozzle near the bed
    G0 Z5 ; Lift Z
    G0 X0 Y0 F10000 ; Move to the corner
    # Move the nozzle very close to the bed
    #G1 Z0.15 F300
    G1 Z2.0 F3000 ; Move Z Axis up little to prevent scratching of Heat Bed
    G1 X20 Y0.1 Z0.4 F1000.0 ; Move to start position
    G1 X100.0 Y0.1 Z0.4 F1000.0 E10 ; Draw the first line
    G1 X100.0 Y0.4  Z0.4 F1000.0 ; Move to side a little
    G1 X20 Y0.4 Z0.4 F3000.0 E10 ; Draw the second line
    G92 E0 ; Reset Extruder
    G1 Z2.0 F2000 ; Move Z Axis up little to prevent scratching of Heat Bed
    G1 X20 Y1.4 Z0.4 E-1 F1000.0 ; Move over to prevent blob squish
    M117 IMPRIMINDO
     # Use absolute coordinates



[gcode_macro END_PRINT]
gcode:
    G90
    M300
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Move nozzle away from print while retracting
    
    G91
    G1 E-3 F2000
    G1 X-20 Y-20 Z20 F1000
    # Raise nozzle by 10mm
    #G1 Z10 F3000
    G90
    # Disable steppers
    M84
    #M300
    M117 IMPRESSAO FINALIZADA

[pause_resume]
recover_velocity: 40

[gcode_macro M600]
gcode:
    {% set X = params.X|default(20)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-5 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro z_offset]
gcode:
   PROBE_CALIBRATE
   M117 ACERTAR O OFFSET COM TESTZ Z=... 

[gcode_macro outoffilament]
gcode:
  M300
  PARK_MACRO
  PAUSE
  ;UNLOAD_FILAMENT
   M117 OUT OF FILAMENT..
  #M300

[gcode_macro PARK_MACRO]
#default_parameter_X: 10
#default_parameter_Y: 10
#default_parameter_Z: 30
gcode:
  M117 PARKING..
  G91
  G1 E-3.14 F1500
  G1 Z{2}
  G90
  G1 X{20} Y{20} F3000


[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    M300
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Move nozzle away from print while retracting
    G91
    G1 X-20 Y-20 Z10 E-2 F300
    # Raise nozzle by 20mm
    G1 Z20 F3000
    G90
    # Disable steppers
    M84
    #M300
    TURN_OFF_HEATERS


[gcode_macro ZUP_0.025]
gcode:
    SET_GCODE_OFFSET Z_ADJUST=0.025 MOVE=1
    #M300

[gcode_macro ZDOWN_0.025] 
gcode:
    SET_GCODE_OFFSET Z_ADJUST=-0.025 MOVE=1
    #M300


[gcode_macro DISABLE_STEPPERS] 
gcode:
    M18
    M117 STEPPERS DISABLED

[idle_timeout]
gcode:
  TURN_OFF_HEATERS
  M84
  M107
timeout: 1800

[gcode_macro BED_MESH_CALIBRATE]
rename_existing: BED_MESH_CALIBRATE_BASE
; gcode parameters
variable_parameter_AREA_START : 0,0
variable_parameter_AREA_END : 0,0
; the clearance between print area and probe area 
variable_mesh_area_offset : 5.0
; number of sample per probe point
variable_probe_samples : 2
; minimum probe count
variable_min_probe_count : 3
; scale up the probe count, should be 1.0 ~ < variable_max_probe_count/variable_min_probe_count
variable_probe_count_scale_factor : 1.0
gcode:
    {% if params.AREA_START and params.AREA_END %}
        {% set bedMeshConfig = printer["configfile"].config["bed_mesh"] %}
        {% set safe_min_x = bedMeshConfig.mesh_min.split(",")[0]|float %}
        {% set safe_min_y = bedMeshConfig.mesh_min.split(",")[1]|float %}
        {% set safe_max_x = bedMeshConfig.mesh_max.split(",")[0]|float %}
        {% set safe_max_y = bedMeshConfig.mesh_max.split(",")[1]|float %}

        {% set area_min_x = params.AREA_START.split(",")[0]|float %}
	{% set area_min_y = params.AREA_START.split(",")[1]|float %}
	{% set area_max_x = params.AREA_END.split(",")[0]|float %}
	{% set area_max_y = params.AREA_END.split(",")[1]|float %}

	{% if bedMeshConfig.probe_count.split(",")|length == 2 %}
            {% set meshPointX = bedMeshConfig.probe_count.split(",")[0]|int %}
            {% set meshPointY = bedMeshConfig.probe_count.split(",")[1]|int %}
        {% else %}
            {% set meshPointX = bedMeshConfig.probe_count.split(",")[0]|int %}
            {% set meshPointY = bedMeshConfig.probe_count.split(",")[0]|int %}
        {% endif %}

	{% set meshMaxPointX = meshPointX %}
	{% set meshMaxPointY = meshPointY %}


        {% if (area_min_x < area_max_x) and (area_min_y < area_max_y) %}
            {% if area_min_x - mesh_area_offset >=  safe_min_x %}
                {% set area_min_x = area_min_x - mesh_area_offset %}
            {% else %}
                {% set area_min_x = safe_min_x %}
            {% endif %}

            {% if area_min_y - mesh_area_offset >=  safe_min_y %}
                {% set area_min_y = area_min_y - mesh_area_offset %}
            {% else %}
                {% set area_min_y = safe_min_y %}
            {% endif %}

            {% if area_max_x + mesh_area_offset <=  safe_max_x %}
                {% set area_max_x = area_max_x + mesh_area_offset %}
            {% else %}
                {% set area_max_x = safe_max_x %}
            {% endif %}

            {% if area_max_y + mesh_area_offset <=  safe_max_y %}
                {% set area_max_y = area_max_y + mesh_area_offset %}
            {% else %}
                {% set area_max_y = safe_max_y %}
            {% endif %}

            {% set meshPointX = (meshPointX * (area_max_x - area_min_x) / (safe_max_x - safe_min_x) * probe_count_scale_factor)|round(0)|int %}
            {% if meshPointX < min_probe_count %}
                {% set meshPointX = min_probe_count %}
            {% endif %}
	    {% if meshPointX > meshMaxPointX %}
                {% set meshPointX = meshMaxPointX %}
            {% endif %}

            {% set meshPointY = (meshPointY * (area_max_y -area_min_y ) / (safe_max_y - safe_min_y) * probe_count_scale_factor )|round(0)|int %}
            {% if meshPointY < min_probe_count %}
                {% set meshPointY = min_probe_count %}
            {% endif %}
	    {% if meshPointY > meshMaxPointY %}
                {% set meshPointY = meshMaxPointY %}
            {% endif %}

            BED_MESH_CALIBRATE_BASE mesh_min={area_min_x},{area_min_y} mesh_max={area_max_x},{area_max_y} probe_count={meshPointX},{meshPointY} samples={probe_samples|int}
        {% else %}
            BED_MESH_CALIBRATE_BASE
        {% endif %}
    {% else %}
        BED_MESH_CALIBRATE_BASE
    {% endif %}



[gcode_macro PA_CALIBRATE]
gcode:
    ######################################################################################
    ####                             DEFINE USER PARAMETERS                            ###
    ######################################################################################
    ###############################[ set printer parameters ]#############################
    {% set nozzle_diameter = printer.configfile.config.extruder.nozzle_diameter | float %}
    {% set bed_size_x           = 330                                           | float %}
    {% set bed_size_y           = 330                                           | float %}
    {% set retract              = 0.8                                           | float %}
    {% set retract_speed        = 30 * 60                                       | float %}
    ######################[ set parameters for extrusion calculation ]####################
    {% set filament_diameter    = params.FD           | default(1.75)           | float %}
    {% set layer_height         = params.LH           | default(0.3)            | float %}
    {% set nozzle_line_ratio    = params.EW           | default(1.2)            | float %}
    {% set extrusion_multiplier = params.EM           | default(1.0)            | float %}
    ################################[ set temperatures ]##################################
    {% set bed_temp             = params.TBED         | default(100)                     %}
    {% set extruder_temp        = params.TEX          | default(230)                     %}
    ###############################[ set test parameters ]################################
    {% set slow_speed           = params.SLOW_SPEED   | default(25)             | float %}
    {% set slow_length          = params.SLOW_LENGTH  | default(20)             | float %}
    {% set fast_speed           = params.FAST_SPEED   | default(80)             | float %}
    {% set fast_length          = params.FAST_LENGTH  | default(40)             | float %}
    {% set travel_speed         = params.TRAVEL_SPEED | default(180)            | float %}
    {% set pa_start             = params.PA_START     | default(0.0)            | float %}
    {% set pa_end               = params.PA_END       | default(0.1)           | float %}
    {% set pa_step              = params.PA_STEP      | default(0.01)           | float %}
    {% set line_spacing         = params.SPACING      | default(5)              | float %}
    ######################################################################################
    ####                           !!! DO NOT EDIT BELOW !!!                           ###
    ######################################################################################
    {% set spacing = line_spacing                                                       %}
    {% set fd      = filament_diameter                                                  %}
    {% set nd      = nozzle_diameter                                                    %}
    {% set ew      = nozzle_diameter * nozzle_line_ratio                                %}
    {% set em      = extrusion_multiplier                                               %}
    {% set lh      = layer_height                                                       %}
    {% set pa      = pa_start                                                           %}
    ##################################[ calculations ]####################################
    {% set slow_speed           = slow_speed * 60                               | float %}
    {% set fast_speed           = fast_speed * 60                               | float %}
    {% set travel_speed         = travel_speed * 60                             | float %}
    {% set lines    = (((pa_end - pa_start) / pa_step) + 1) | round(0, 'ceil')  | int   %}
    {% set p_width  = ((2 * slow_length + fast_length))                                 %}
    {% set p_height = (lines * (spacing + (nd * ew)))                                   %}
    {% set p_width_total  = p_width + 20                                                %}
    {% set p_height_total = p_height + 40                                               %}
    {% set start_x_pos    = (bed_size_x - p_width) / 2                                  %}
    {% set end_x_pos      = (bed_size_x + p_width) / 2                                  %}
    {% set start_y_pos    = (bed_size_y - p_height) / 2                                 %}
    {% set end_y_pos      = (bed_size_y + p_height) / 2                                 %}
    {% set x_pos          = start_x_pos                                                 %}
    {% set y_pos          = start_y_pos                                                 %}
    ########################[ check if test patter fits on bed ]##########################
    {% if p_height_total > bed_size_y or p_width_total > bed_size_x %}
      {% set exceeds_bed_area = true  %}
    {% else %}
      {% set exceeds_bed_area = false %}
    {% endif %}
    ######################################################################################
    ### Using Slic3r flow math to calculate extrusion amounts:                         ###
    ######################################################################################
    ### V_in  = (pi * fd ** 2) / 4 * E                                                 ###
    ### V_out = A * L * em                                                             ###
    ### V_in  = V_out                                                                  ###
    ### A     = (ew - lh) * lh + pi * (lh / 2) ** 2                                    ###
    ### E     = ((A * L * 4) / (pi * fd ** 2)) * em                                    ###
    ######################################################################################
    {% set pi      = 3.141592654                                     | float            %}
    {% set A       = (ew - lh) * lh + pi * (lh / 2) ** 2             | float            %}
    {% set E_prime = (((A * p_height * 4) / (pi * fd ** 2)) * 1.6)   | round(6, 'ceil') %}
    {% set E_slow  = (((A * slow_length * 4) / (pi * fd ** 2)) * em) | round(6, 'ceil') %}
    {% set E_fast  = (((A * fast_length * 4) / (pi * fd ** 2)) * em) | round(6, 'ceil') %}
    {% set E_mark  = (((A * 20 * 4) / (pi * fd ** 2)) * em)          | round(6, 'ceil') %}
    ######################################################################################
    ### START CALIBRATION ###
    M190 S{ bed_temp }
    M109 S{ extruder_temp }
    G28
    ### PRIME NOZZLE ###
    M83 ; set relative extrusion mode
    G1 X{ x_pos - 10 } Y{ y_pos } F{ travel_speed } ; move to prime line start
    G1 Z{ layer_height } ; move Z down
    G1 Y{ y_pos + p_height } E{ E_prime } F { slow_speed } ; print first prime line
    G1 X{ x_pos - 5 } F{ travel_speed } ; move to second prime line start
    G1 Y{ y_pos } E{ E_prime } F { slow_speed } ; print second prime line
    G92 E0
    ### START TEST PATTERN ###
    SET_PRESSURE_ADVANCE EXTRUDER=extruder ADVANCE={ pa }
    {% for i in range(lines) %}
        {% if not loop.first %}
            {% set y_pos = y_pos + (i * (spacing + ew)) %}
            {% set pa = pa + (i * pa_step) %}
            SET_PRESSURE_ADVANCE EXTRUDER=extruder ADVANCE={ pa }
        {% endif %}
        M117 PA={ pa }
        ### move to line starting postion
        G1 X{ x_pos } Y{ y_pos } F{ travel_speed }
        G1 E{ retract } F{ retract_speed } ; un-retract
        ### print first slow part
        {% set x_pos = x_pos + slow_length %}
        G1 X{ x_pos } Y{ y_pos } E{ E_slow } F{ slow_speed }
        ### print fast part
        {% set x_pos = x_pos + fast_length %}
        G1 X{ x_pos } Y{ y_pos } E{ E_fast } F{ fast_speed }
        ### print second slow part
        {% set x_pos = x_pos + slow_length %}
        G1 X{ x_pos } Y{ y_pos } E{ E_slow } F{ slow_speed }
        G1 E-{ retract } F{ retract_speed } ; retract
        ### reset x position
        {% set x_pos = start_x_pos %}
    {% endfor %}
    ### PRINT MARKER ###
    G1 E-{ retract } F{ retract_speed } ; retract
    G1 X{ x_pos + slow_length } Y{ end_y_pos + 5 } F{ travel_speed } ; move to position marker 1
    G1 E{ retract } F{ retract_speed } ; un-retract
    G1 Y{ end_y_pos + 5 + 20 } E{ E_mark } F{ slow_speed } ; print marker 1
    G1 E-{ retract } F{ retract_speed } ; retract
    G1 X{ x_pos + slow_length + fast_length } Y{ end_y_pos + 5 } F{ travel_speed } ; move to position marker 2
    G1 E{ retract } F{ retract_speed } ; un-retract
    G1 Y{ end_y_pos + 5 + 20 } E{ E_mark } F{ slow_speed } ; print marker 2
    G1 E-{ retract } F{ retract_speed } ; retract
    ### END CALIBRATION ###
    TURN_OFF_HEATERS
    G1 Z5
    G1 X10 Y{ bed_size_y - 5 } F{ travel_speed } ;//TODO: maybe move to "max toolhead position - 5"
    M84    

